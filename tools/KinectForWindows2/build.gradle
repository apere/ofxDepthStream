apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'application'

mainClassName = 'fuse.kinectforwindows2.examples.SimpleDepthExample'
group = 'fuse.kinectforwindows2.examples'
version = '1.0.0'
description = """Fuse KinectForWindows2 depth-stream Transmitter"""

sourceCompatibility = 1.7
targetCompatibility = 1.7

applicationDistribution.from('lib/kinect') {
    into "lib/kinect/"
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

sourceSets {
    main {
         java {
             srcDir sourceSets.main.java.srcDirs + './lib/kinectstreaming/src'
        }
    }
}

repositories {
     mavenLocal()
     mavenCentral()
     maven { url "https://clojars.org/repo" }
}

dependencies {
    compile group: 'org.jogamp.jogl', name: 'jogl-all', version:'2.3.2'
    compile group: 'org.jogamp.gluegen', name: 'gluegen-rt', version:'2.3.2'
    // https://mvnrepository.com/artifact/javax.vecmath/vecmath
    compile group: 'javax.vecmath', name: 'vecmath', version: '1.5.2'
}

// for `gradle run` development command
// run {
//     systemProperty "freenect.libs.path", "./lib/freenect2"
// }

// for distribution launch script
// applicationDefaultJvmArgs = ["-Dfreenect.libs.path=./lib/freenect2;../lib/freenect2"]

// avoid windows error when running the generated distribution's .bat script
// reduces the super long CLASSPATH line which explicitly mentions every jar separately,
// into a single shot %APP_HOME%\lib\* wildcard
tasks.withType(CreateStartScripts).each { task ->
    task.doLast {
        String text = task.windowsScript.text
        text = text.replaceFirst(/(set CLASSPATH=%APP_HOME%\\lib\\).*/, { "${it[1]}*" })
        task.windowsScript.write text
    }
}
